# Test JSON functions available from datafusion-functions-json 0.48.0

# Insert test data with valid JSON
statement ok
INSERT INTO otel_logs_and_spans (
    project_id, timestamp, id, hashes, date,
    parent_id, name, kind, resource___service___name,
    status_code, status_message, level, duration, summary
) VALUES 
    ('json_test', TIMESTAMP '2024-01-15T10:00:00Z', 'json_1', ARRAY['hash1']::VARCHAR[], DATE '2024-01-15',
     NULL, 'test_json', 'SERVER', 'test-service',
     'OK', '{"name": "John", "age": 30, "active": true, "items": ["apple", "banana"], "address": {"city": "NYC", "zip": "10001"}}', 'INFO', 1000000, ARRAY['Test JSON'])

# === Available JSON functions in datafusion-functions-json ===

# According to the crate documentation, these functions should be available:
# - json_get_str: Extract string value from JSON path
# - json_get_int: Extract integer value from JSON path  
# - json_get_float: Extract float value from JSON path
# - json_get_bool: Extract boolean value from JSON path
# - json_get: Extract any value from JSON path (returns as JSON string)
# - json_length: Get length of JSON array/object
# - json_contains: Check if JSON contains a value
# - json_keys: Get keys of a JSON object

# However, due to the Union type issue, these may not work with our schema
# Let's test what actually works

# First, verify we can read the JSON string
query T
SELECT status_message
FROM otel_logs_and_spans 
WHERE project_id = 'json_test' AND id = 'json_1'
----
{"name": "John", "age": 30, "active": true, "items": ["apple", "banana"], "address": {"city": "NYC", "zip": "10001"}}

# === Functions that are NOT available ===

# json_build_array - Now available in our implementation
query T
SELECT json_build_array('a', 'b', 'c')
----
["a","b","c"]

# to_json - NOT part of datafusion-functions-json  
statement error
SELECT to_json(name)
FROM otel_logs_and_spans 
WHERE project_id = 'json_test' AND id = 'json_1'

# json_object - NOT part of datafusion-functions-json
statement error
SELECT json_object('key', 'value')

# json_agg - NOT part of datafusion-functions-json
statement error
SELECT json_agg(name)
FROM otel_logs_and_spans 
WHERE project_id = 'json_test'

# === Summary of findings ===
# 1. EXTRACT function is available and works for all date parts (year, month, day, hour, minute, second)
# 2. date_part function is available as an alias for EXTRACT
# 3. Custom functions to_char and at_time_zone are registered and working
# 4. JSON functions from datafusion-functions-json are registered but fail with Union type errors
# 5. PostgreSQL-style JSON construction functions (json_build_array, to_json) are NOT available
# 6. The jsonb_array_elements function is registered but not implemented (placeholder only)